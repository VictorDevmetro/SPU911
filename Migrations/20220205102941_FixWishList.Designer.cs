// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SPU911.DAL;

namespace SPU911.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20220205102941_FixWishList")]
    partial class FixWishList
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SPU911.DAL.Entities.ImageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "img/product01.png"
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "img/product02.png"
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "img/product03.png"
                        },
                        new
                        {
                            Id = 4,
                            ImageUrl = "img/product04.png"
                        },
                        new
                        {
                            Id = 5,
                            ImageUrl = "img/product05.png"
                        },
                        new
                        {
                            Id = 6,
                            ImageUrl = "img/product06.png"
                        },
                        new
                        {
                            Id = 7,
                            ImageUrl = "img/product07.png"
                        },
                        new
                        {
                            Id = 8,
                            ImageUrl = "img/product08.png"
                        },
                        new
                        {
                            Id = 9,
                            ImageUrl = "img/product09.png"
                        });
                });

            modelBuilder.Entity("SPU911.DAL.Entities.ProductEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ImageId")
                        .HasColumnType("int");

                    b.Property<bool>("IsNew")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceOld")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductType")
                        .HasColumnType("int");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<int>("SalePercent")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Headphones",
                            ImageId = 1,
                            IsNew = false,
                            Price = 500m,
                            PriceOld = 625m,
                            ProductName = "IPods",
                            ProductType = 3,
                            Rate = 4,
                            SalePercent = 15
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Laptops",
                            ImageId = 2,
                            IsNew = true,
                            Price = 2000m,
                            PriceOld = 2599m,
                            ProductName = "MacBook Air",
                            ProductType = 0,
                            Rate = 5,
                            SalePercent = 0
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Desktop",
                            ImageId = 3,
                            IsNew = true,
                            Price = 5000m,
                            PriceOld = 6599m,
                            ProductName = "ProBook",
                            ProductType = 0,
                            Rate = 5,
                            SalePercent = 5
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Cameras",
                            ImageId = 4,
                            IsNew = true,
                            Price = 5000m,
                            PriceOld = 6599m,
                            ProductName = "Sony",
                            ProductType = 2,
                            Rate = 3,
                            SalePercent = 0
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "Calls",
                            ImageId = 5,
                            IsNew = true,
                            Price = 2300m,
                            PriceOld = 2599m,
                            ProductName = "MI Pro 10",
                            ProductType = 1,
                            Rate = 2,
                            SalePercent = 25
                        },
                        new
                        {
                            Id = 6,
                            CategoryName = "Printer",
                            ImageId = 6,
                            IsNew = true,
                            Price = 350m,
                            PriceOld = 599m,
                            ProductName = "Epson L5136",
                            ProductType = 3,
                            Rate = 5,
                            SalePercent = 5
                        });
                });

            modelBuilder.Entity("SPU911.DAL.Entities.ProductEntity", b =>
                {
                    b.HasOne("SPU911.DAL.Entities.ImageEntity", "ImageItem")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.Navigation("ImageItem");
                });
#pragma warning restore 612, 618
        }
    }
}
